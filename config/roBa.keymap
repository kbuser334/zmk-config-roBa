#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        MO6 {
            bindings = <&mo 6>;
            key-positions = <41 29>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R      &kp T                                                 &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S         &kp D         &kp F      &kp G           &kp LS(LG(S))      &kp C_VOL_UP       &kp H        &kp J  &kp K      &kp L    &mo 4
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V      &kp B           &kp C_MUTE         &kp C_VOLUME_DOWN  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &kp GRAVE  &kp LEFT_SHIFT  &lt 1 SPACE        &kp BACKSPACE      &lt 2 ENTER                             &kp DEL
            >;

            sensor-bindings =
                <&inc_dec_kp PG_UP PAGE_DOWN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp ESC         &kp TAB        &kp UP         &kp LS(NUMBER_1)  &kp LS(SLASH)                      &kp MINUS            &kp PLUS   &kp LS(INTERNATIONAL_3)  &kp LS(NUMBER_8)   &kp LS(NUMBER_9)
&kp TAB         &kp LEFT       &kp DOWN       &kp RIGHT         &kp MINUS      &trans      &trans  &kp SEMICOLON        &kp COLON  &kp LEFT_BRACKET         &kp RIGHT_BRACKET  &kp BACKSLASH
&kp LEFT_SHIFT  &kp BACKSLASH  &kp LS(EQUAL)  &kp COMMA         &kp PERIOD     &trans      &trans  &kp INTERNATIONAL_3  &kp AT     &kp UNDER                &kp SLASH          &kp LEFT_SHIFT
&trans          &trans         &trans         &trans            &trans         &trans      &trans  &kp DEL                                                                     &kp LCTRL
            >;

            sensor-bindings =
                <&inc_dec_kp PAGE_UP PAGE_DOWN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&kp ESCAPE      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp BACKSPACE                      &kp LG(LS(S))  &kp F7  &kp F8  &kp F9  &kp F10
&kp TAB         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ENTER      &trans      &to 4   &trans         &kp F4  &kp F5  &kp F6  &kp F11
&kp LEFT_SHIFT  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD     &trans      &trans  &trans         &kp F1  &kp F2  &kp F3  &kp F12
&trans          &kp NUMBER_0  &kp NUMBER_0  &trans        &trans         &trans      &trans  &kp ENTER                              &trans
            >;

            sensor-bindings =
                <&inc_dec_kp PAGE_UP PAGE_DOWN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &kp LC(W)     &kp F5         &kp LC(LS(TAB))  &kp LC(TAB)     &trans
&trans  &trans  &trans  &trans  &trans  &trans      &to 0   &mkp MB3      &mkp MB1       &mkp MB2         &mo 5           &none
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LA(LEFT)  &kp LA(RIGHT)  &msc SCRL_UP     &msc SCRL_DOWN  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                        &trans
            >;

            sensor-bindings =
                <&inc_dec_kp PAGE_UP PAGE_DOWN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings =
                <&inc_dec_kp PAGE_UP PAGE_DOWN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        layer_6 {
            bindings = <
&bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                                 &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans          &trans        &trans        &trans        &trans        &trans      &trans       &trans        &trans        &trans        &trans        &trans
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans          &trans        &trans        &trans        &trans        &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
